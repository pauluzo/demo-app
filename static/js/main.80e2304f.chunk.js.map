{"version":3,"sources":["serviceWorker.js","components/Blocs/Movie_bloc.js","components/Blocs/Bloc_Builder.js","components/Pages/Home.js","components/Toolbar/Toolbar.js","components/Pages/Movie_details.js","components/Pages/Favorites.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","movieBloc","favList","getSubject","movieSubject","getFavSubject","favSubject","this","rxjs","val","next","push","i","length","id","splice","BlocBuilder","props","state","snapshot","data","connectionState","error","subscription","subject","subscribe","setState","unsubscribe","builder","React","Component","Home","movies","input","type","handleInput","e","value","target","handleSelect","handleSubmit","a","preventDefault","fetch","then","json","newData","results","alert","console","log","catch","err","JSON","stringify","localStorage","setItem","getItem","parse","className","onSubmit","onChange","MovieCard","movieList","map","movie","key","src","poster_path","alt","title","substring","release_date","onClick","viewMovie","style","textDecoration","color","to","backgroundColor","cursor","border","deleteFavorite","icon","faHeart","addToFavorite","Toolbar","margin","width","height","withRouter","marginTop","backdrop_path","vote_average","overview","history","Favorites","fontStyle","list","faEye","faTrash","App","exact","path","component","MovieDetails","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80e2304f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as rxjs from 'rxjs';\r\n\r\nclass MovieBloc {\r\n  favList = [];\r\n  constructor() {\r\n    // creating our BehaviourSubjects with initial value of null\r\n    this.movieSubject = new rxjs.BehaviorSubject();\r\n    this.favSubject = new rxjs.BehaviorSubject();\r\n  }\r\n\r\n  // BLoC method to pass movie object to the view component\r\n  viewMovie(val) {\r\n    this.movieSubject.next(val);\r\n  }\r\n\r\n  // BLoC method to add a movie to the list of favorite movies\r\n  addToFavorite(val) {\r\n    this.favList.push(val);\r\n    this.favSubject.next(this.favList);\r\n  }\r\n\r\n  deleteFavorite(val) {\r\n    for (var i = 0; i < this.favList.length; i++) {\r\n      if(val.id === this.favList[i].id) {\r\n        this.favList.splice(i, 1);\r\n      }\r\n    }\r\n    this.favSubject.next(this.favList);\r\n  }\r\n\r\n  // the get function to return the subject. Allows a component to suscribe.\r\n  getSubject = () => {\r\n    return this.movieSubject;\r\n  } \r\n\r\n  getFavSubject = () => {\r\n    return this.favSubject;\r\n  } \r\n}\r\n\r\nconst movieBloc = new MovieBloc();\r\n\r\nexport default movieBloc;","import React from 'react';\r\n\r\nclass BlocBuilder extends React.Component {\r\n  // -1 waiting \r\n  // 0 active\r\n  // 1 done\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //snapshot represents the object data that would be sent to the builder\r\n      snapshot: {\r\n        data: null,\r\n        connectionState: -1,\r\n        error: null,\r\n      }\r\n    }\r\n    this.subscription = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.subscription = this.props.subject.subscribe(\r\n      (data) => {\r\n        this.setState({\r\n          snapshot: {\r\n            data: data,\r\n            connectionState: 0,\r\n            error: null,\r\n          }\r\n        })\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          snapshot: {\r\n            data: null,\r\n            connectionState: 1,\r\n            error: error\r\n          }\r\n        })\r\n      },\r\n      () => {\r\n        this.setState({\r\n          snapshot: {\r\n            data: null,\r\n            connectionState: 1,\r\n            error: null,\r\n          }\r\n        })\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      this.props.builder(this.state.snapshot)\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlocBuilder;","import React from 'react';\r\nimport './Home.css';\r\nimport {Link} from 'react-router-dom'\r\nimport movieBloc from '../Blocs/Movie_bloc';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport BlocBuilder from '../Blocs/Bloc_Builder';\r\n\r\nexport default class Home extends React.Component {\r\n  state = {\r\n    movies: [],\r\n    input: '',\r\n    type: 'movie',\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      input: value,\r\n    })\r\n  } \r\n\r\n  handleSelect = (e) => {\r\n    this.setState({\r\n      type: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const api_key = 'f4c84bec1d4d2bffdfc01648692ff93f';\r\n    fetch(`https://api.themoviedb.org/3/search/movie?query=${this.state.input}&api_key=${api_key}&language=en-US&page=1&include_adult=false`)\r\n    .then((data) => {\r\n      return data.json();\r\n    })\r\n    .then((newData) => {\r\n      if(newData.results) {\r\n        this.setState({\r\n          movies: newData.results\r\n        });\r\n      }\r\n      else {\r\n        alert('There are no results for these search parameters.');\r\n      }\r\n      console.log(this.state.movies);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const movies = JSON.stringify(this.state.movies);\r\n    localStorage.setItem('movies', movies);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const json = localStorage.getItem('movies');\r\n    if(json) {\r\n      const movies = JSON.parse(json);\r\n      this.setState({movies});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='home_container'>\r\n        <div className='search_form'>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type='text' value={this.state.input} \r\n              onChange={this.handleInput} className='search_input'\r\n            />\r\n            <input type='submit' value='Search' className='search_button' />\r\n          </form>\r\n        </div>\r\n        <MovieCard movies={this.state.movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MovieCard = (props) => {\r\n  let movieList = props.movies.length < 1 ? null :  props.movies.map((movie) => {\r\n    return(\r\n      <div key={movie.id} className='card_container'>\r\n        <div className='movie_container'>\r\n          <div className='movie_poster'><img src={`https://image.tmdb.org/t/p/original${movie.poster_path}`} alt='no movie poster' /></div>\r\n          <div className='movie_details'>\r\n            <div className='movie_title'><span>\r\n              {`${movie.title.length > 25 ?  (movie.title.substring(0, 22) + '...') : movie.title}`}</span> \r\n            </div>\r\n            <div className='movie_year'><span></span> {movie.release_date}</div>\r\n            <div className='buttons_container'>\r\n              <button onClick={() => {\r\n                movieBloc.viewMovie(movie);\r\n              }} ><Link style={{textDecoration: 'none', color: 'rgb(0, 123, 255)'}} to='/view'><b>View Movie</b></Link></button>\r\n              <BlocBuilder \r\n                subject={movieBloc.favSubject}\r\n                builder={(snapshot) => {\r\n                  if(snapshot.data) {\r\n                    for(var i=0; i < snapshot.data.length; i++) {\r\n                      if(snapshot.data[i].id === movie.id) {\r\n                        return(\r\n                          <button style={{backgroundColor: 'red', color: 'white', cursor: 'pointer', border: '0px'}} onClick={() => {\r\n                            movieBloc.deleteFavorite(movie);\r\n                            }} ><FontAwesomeIcon icon={faHeart} style={{color: 'white'}}/><b> Unlike</b>\r\n                          </button>\r\n                        );\r\n                      }\r\n                    }\r\n                    return(\r\n                      <button style={{cursor: 'pointer'}} onClick={() => {\r\n                        movieBloc.addToFavorite(movie);\r\n                        }} ><FontAwesomeIcon icon={faHeart} style={{color: 'red'}}/><b> Like</b>\r\n                      </button>\r\n                    );\r\n                  }\r\n                  else {\r\n                    return(\r\n                      <button style={{cursor: 'pointer'}} onClick={() => {\r\n                        movieBloc.addToFavorite(movie);\r\n                        }} ><FontAwesomeIcon icon={faHeart} style={{color: 'red'}}/><b> Like</b>\r\n                      </button>\r\n                    );\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n\r\n  return(\r\n    <div className='component_container'>\r\n      <div className='center_component'>\r\n        {movieList}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport{ Link} from 'react-router-dom';\r\nimport './Toolbar.css';\r\nimport movieBloc from '../Blocs/Movie_bloc';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport BlocBuilder from '../Blocs/Bloc_Builder';\r\n\r\nconst Toolbar = props => {\r\n  return(\r\n    <header className='toolbar_header'>\r\n      <div className='toolbar_container' >\r\n        <div><h2>Movie Search</h2></div>\r\n        <div className='spacer' />\r\n        <div className='toolbar_link'>\r\n        \r\n          <div className='circle'>\r\n            <BlocBuilder \r\n              subject={movieBloc.getFavSubject()}\r\n              builder={(snapshot) => {\r\n                return snapshot.data ? snapshot.data.length : 0;\r\n              }}\r\n            />\r\n          </div>\r\n          <Link to='/favorites'><FontAwesomeIcon icon={faHeart} style={{margin: '10px',width: '90%', height: 'auto', color: 'red'}} ></FontAwesomeIcon></Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Movie_details.css';\r\nimport movieBloc from '../Blocs/Movie_bloc';\r\nimport BlocBuilder from '../Blocs/Bloc_Builder';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MovieDetails = (props) => {\r\n  const subject = movieBloc.getSubject();\r\n\r\n  return(\r\n    <div className='details_component_container' style={{marginTop: '60px'}} >\r\n      <BlocBuilder subject={subject} \r\n        builder={(snapshot) => {\r\n          let movie = snapshot.data\r\n          return(\r\n            <div className='details_container' >\r\n              { !movie ? \r\n                <div>\r\n                  <p>No movie details to show.</p>\r\n                </div> :\r\n                <div className='view_container'>\r\n                  <div className='view_poster'><img src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`} alt='no movie poster' /></div>\r\n                  <div className='view_details'>\r\n                    <div><span style={{color: 'black'}}><b>Title: </b> </span> \r\n                      {`${movie.title}`}\r\n                    </div>\r\n                    <div><b>Date of Release: </b> {movie.release_date}</div>\r\n                    <div><b>Vote Average: </b> {movie.vote_average}</div>\r\n                    <div>\r\n                      <p><b>Overview: </b>{movie.overview}</p>\r\n                    </div>\r\n                    <div className='buttons_container'>\r\n                      <button style={{color: '#007bff', cursor: 'pointer'}} onClick={() => {\r\n                        const {history} = props;\r\n                        if(history) history.push('/');\r\n                      }}>\r\n                        <b>Go Home</b>\r\n                      </button>\r\n                      <BlocBuilder \r\n                        subject={movieBloc.favSubject}\r\n                        builder={(snapshot) => {\r\n                          if(snapshot.data) {\r\n                            for(var i=0; i < snapshot.data.length; i++) {\r\n                              if(snapshot.data[i].id === movie.id) {\r\n                                return(\r\n                                  <button style={{backgroundColor: 'red', color: 'white', border: '0px'}} onClick={() => {\r\n                                    movieBloc.deleteFavorite(movie);\r\n                                    }} ><FontAwesomeIcon icon={faHeart} style={{color: 'white'}}/><b> Unlike</b>\r\n                                  </button>\r\n                                );\r\n                              }\r\n                            }\r\n                            return(\r\n                              <button  onClick={() => {\r\n                                movieBloc.addToFavorite(movie);\r\n                              }} >\r\n                                <FontAwesomeIcon icon={faHeart} style={{color: 'red'}}/><b> Like</b>\r\n                              </button>\r\n                            );\r\n                          }\r\n                          else {\r\n                            return(\r\n                              <button onClick={() => {\r\n                                movieBloc.addToFavorite(movie);\r\n                                }} ><FontAwesomeIcon icon={faHeart} style={{color: 'red'}}/><b> Like</b>\r\n                              </button>\r\n                            );\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(MovieDetails);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BlocBuilder from '../Blocs/Bloc_Builder';\r\nimport movieBloc from '../Blocs/Movie_bloc';\r\nimport './Favorites.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Favorites = () => {\r\n  const subject = movieBloc.getFavSubject();\r\n  return(\r\n    <div className='favList_container' >\r\n      <div style={{margin: '20px 0px'}}>\r\n        <h3><b style={{fontStyle: 'italic', color: 'blue'}}>Your Favorite movies!!</b></h3>\r\n      </div>\r\n      <div className='bloc_style'>\r\n        <BlocBuilder \r\n          subject={subject}\r\n          builder={(snapshot) => {\r\n            let favList = snapshot.data; \r\n            if(!favList || favList.length < 1) {\r\n              return(\r\n                <div>\r\n                  <p>You have not selected any movie(s) as your favorite.</p>\r\n                </div>\r\n              );\r\n            }\r\n            else {\r\n              let list = favList.map((movie) => {\r\n                return(\r\n                  <div key={movie.id} className='favorite_container' >\r\n                    <div className='favorite_image' >\r\n                      <img src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\r\n                        alt={`No movie poster - ${movie.title}`} \r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <p>\r\n                        {`${movie.title.length > 40 ? \r\n                          (movie.title.substring(0, 37) + '...') : movie.title}`\r\n                        }\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p>\r\n                        {movie.release_date}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p>\r\n                        {movie.overview.substring(0, 60) + '...'}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Link to='/view' onClick={() => {\r\n                        movieBloc.viewMovie(movie);\r\n                      }}>\r\n                        <FontAwesomeIcon icon={faEye} className='view_icon' style={{width: '25px'}} />\r\n                      </Link>\r\n                      <FontAwesomeIcon icon={faTrash} className='delete_icon' style={{width: '25px'}}\r\n                        onClick={() => {\r\n                          movieBloc.deleteFavorite(movie);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );  \r\n              });\r\n              return(\r\n                <div>\r\n                  {list}\r\n                </div>\r\n              );\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport  default Favorites;","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Home from './components/Pages/Home';\r\nimport Toolbar from './components/Toolbar/Toolbar';\r\nimport MovieDetails from './components/Pages/Movie_details';\r\nimport Favorites from './components/Pages/Favorites'\r\n\r\n\r\nfunction App () {\r\n  return (\r\n    <div>\r\n      <Toolbar/>\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/view' component={MovieDetails} />\r\n        <Route path='/favorites' component={Favorites} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from 'react-router-dom';\nimport {createBrowserHistory} from 'history'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <HashRouter history={history}>\n    <App />\n  </HashRouter>, \n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}